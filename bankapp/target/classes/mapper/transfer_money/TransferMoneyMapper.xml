<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cumt.bankapp.mapper.TransferMoneyMapper">
    
    <resultMap type="TransferMoney" id="TransferMoneyResult">
        <result property="appointmentTime"    column="appointment_time"    />
        <result property="fromAccount"    column="from_account"    />
        <result property="toAccount"    column="to_account"    />
        <result property="amount"    column="amount"    />
        <result property="transferDate"    column="transfer_date"    />
        <result property="description"    column="description"    />
    </resultMap>

    <sql id="selectTransferMoneyVo">
        select appointment_time,  from_account, to_account, amount, transfer_date, description from transfer_money
    </sql>

    <select id="selectTransferMoneyList" parameterType="TransferMoney" resultMap="TransferMoneyResult">
        <include refid="selectTransferMoneyVo"/>
        <where>  
            <if test="appointmentTime != null "> and appointment_time = #{appointmentTime}</if>
            <if test="fromAccount != null "> and from_account = #{fromAccount}</if>
            <if test="toAccount != null "> and to_account = #{toAccount}</if>
            <if test="amount != null "> and amount = #{amount}</if>
            <if test="transferDate != null "> and transfer_date = #{transferDate}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
        </where>
    </select>
    
    <select id="selectTransferMoneyByTransferId" parameterType="String" resultMap="TransferMoneyResult">
        <include refid="selectTransferMoneyVo"/>
        where id = #{transferId}
    </select>
    <select id="selectAllFlow" parameterType="string"  resultMap="TransferMoneyResult">
        select appointment_time,  from_account, to_account, amount, transfer_date, description from transfer_money where from_account = #{transferId} or to_account = #{transferId}
    </select>
    <select id="getPay" resultType="java.lang.Double" parameterType="java.util.Map">
        SELECT amount FROM transfer_money
        WHERE from_account IN
        <!-- Use MyBatis foreach to iterate over the list of IDs -->
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND transfer_date >= #{startDate}
        ORDER BY transfer_date DESC
    </select>

    <select id="getRecive" resultType="java.lang.Double" parameterType="java.util.Map">
        SELECT amount FROM transfer_money
        WHERE to_account IN
        <!-- Use MyBatis foreach to iterate over the list of IDs -->
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND transfer_date >= #{startDate}
        ORDER BY transfer_date DESC
    </select>


    <insert id="insertTransferMoney" parameterType="TransferMoney">
        insert into transfer_money
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="appointmentTime != null">appointment_time,</if>
            <if test="fromAccount != null">from_account,</if>
            <if test="toAccount != null">to_account,</if>
            <if test="amount != null">amount,</if>
            <if test="transferDate != null">transfer_date,</if>
            <if test="description != null">description,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="appointmentTime != null">#{appointmentTime},</if>
            <if test="fromAccount != null">#{fromAccount},</if>
            <if test="toAccount != null">#{toAccount},</if>
            <if test="amount != null">#{amount},</if>
            <if test="transferDate != null">#{transferDate},</if>
            <if test="description != null">#{description},</if>
         </trim>
    </insert>

    <update id="updateTransferMoney" parameterType="TransferMoney">
        update transfer_money
        <trim prefix="SET" suffixOverrides=",">
            <if test="appointmentTime != null">appointment_time = #{appointmentTime},</if>
            <if test="fromAccount != null">from_account = #{fromAccount},</if>
            <if test="toAccount != null">to_account = #{toAccount},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="transferDate != null">transfer_date = #{transferDate},</if>
            <if test="description != null">description = #{description},</if>
        </trim>
        where id = #{transferId}
    </update>

    <delete id="deleteTransferMoneyByTransferId" parameterType="String">
        delete from transfer_money where id = #{transferId}
    </delete>

    <delete id="deleteTransferMoneyByTransferIds" parameterType="String">
        delete from transfer_money where id in
        <foreach item="transferId" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>