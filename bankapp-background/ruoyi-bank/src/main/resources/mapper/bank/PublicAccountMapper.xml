<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.bank.mapper.PublicAccountMapper">
    
    <resultMap type="PublicAccount" id="PublicAccountResult">
        <result property="accountId"    column="account_id"    />
        <result property="accountName"    column="account_name"    />
        <result property="accountType"    column="account_type"    />
        <result property="balance"    column="balance"    />
        <result property="openDate"    column="open_date"    />
        <result property="address"    column="address"    />
        <result property="phoneNumber"    column="phone_number"    />
        <result property="email"    column="email"    />
        <result property="isActive"    column="is_active"    />
        <result property="lastUpdatedAt"    column="last_updated_at"    />
        <result property="id"    column="id"    />
    </resultMap>

    <sql id="selectPublicAccountVo">
        select account_id, account_name, account_type, balance, open_date, address, phone_number, email, is_active, last_updated_at, id from public_account
    </sql>

    <select id="selectPublicAccountList" parameterType="PublicAccount" resultMap="PublicAccountResult">
        <include refid="selectPublicAccountVo"/>
        <where>  
            <if test="accountId != null  and accountId != ''"> and account_id = #{accountId}</if>
            <if test="accountName != null  and accountName != ''"> and account_name like concat('%', #{accountName}, '%')</if>
            <if test="accountType != null  and accountType != ''"> and account_type = #{accountType}</if>
            <if test="balance != null  and balance != ''"> and balance = #{balance}</if>
            <if test="openDate != null "> and open_date = #{openDate}</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
            <if test="phoneNumber != null  and phoneNumber != ''"> and phone_number = #{phoneNumber}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="isActive != null  and isActive != ''"> and is_active = #{isActive}</if>
            <if test="lastUpdatedAt != null "> and last_updated_at = #{lastUpdatedAt}</if>
        </where>
    </select>
    
    <select id="selectPublicAccountById" parameterType="String" resultMap="PublicAccountResult">
        <include refid="selectPublicAccountVo"/>
        where id = #{id}
    </select>

    <select id="selectPublicAccountByAId" parameterType="String" resultMap="PublicAccountResult">
        <include refid="selectPublicAccountVo"/>
        where account_id = #{id}
    </select>
        
    <insert id="insertPublicAccount" parameterType="PublicAccount" useGeneratedKeys="true" keyProperty="id">
        insert into public_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">account_id,</if>
            <if test="accountName != null">account_name,</if>
            <if test="accountType != null">account_type,</if>
            <if test="balance != null">balance,</if>
            <if test="openDate != null">open_date,</if>
            <if test="address != null">address,</if>
            <if test="phoneNumber != null">phone_number,</if>
            <if test="email != null">email,</if>
            <if test="isActive != null">is_active,</if>
            <if test="lastUpdatedAt != null">last_updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountId != null">#{accountId},</if>
            <if test="accountName != null">#{accountName},</if>
            <if test="accountType != null">#{accountType},</if>
            <if test="balance != null">#{balance},</if>
            <if test="openDate != null">#{openDate},</if>
            <if test="address != null">#{address},</if>
            <if test="phoneNumber != null">#{phoneNumber},</if>
            <if test="email != null">#{email},</if>
            <if test="isActive != null">#{isActive},</if>
            <if test="lastUpdatedAt != null">#{lastUpdatedAt},</if>
         </trim>
    </insert>

    <update id="updatePublicAccount" parameterType="PublicAccount">
        update public_account
        <trim prefix="SET" suffixOverrides=",">
            <if test="accountId != null">account_id = #{accountId},</if>
            <if test="accountName != null">account_name = #{accountName},</if>
            <if test="accountType != null">account_type = #{accountType},</if>
            <if test="balance != null">balance = #{balance},</if>
            <if test="openDate != null">open_date = #{openDate},</if>
            <if test="address != null">address = #{address},</if>
            <if test="phoneNumber != null">phone_number = #{phoneNumber},</if>
            <if test="email != null">email = #{email},</if>
            <if test="isActive != null">is_active = #{isActive},</if>
            <if test="lastUpdatedAt != null">last_updated_at = #{lastUpdatedAt},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePublicAccountById" parameterType="String">
        delete from public_account where id = #{id}
    </delete>

    <update id="withdraw">
        UPDATE individual_account
        SET balance = balance - #{amount}
        WHERE account_id = #{accountId} AND balance >= #{amount}
    </update>

    <update id="deposit" >
        UPDATE individual_account
        SET balance = balance + #{amount}
        WHERE account_id = #{accountId}
    </update>

    <update id="withdrawPublic">
        UPDATE public_account
        SET balance = balance - #{amount}
        WHERE account_id = #{accountId} AND balance >= #{amount}
    </update>

    <update id="depositPublic" >
        UPDATE public_account
        SET balance = balance + #{amount}
        WHERE account_id = #{accountId}
    </update>

    <delete id="deletePublicAccountByIds" parameterType="String">
        delete from public_account where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>