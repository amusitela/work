<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.bank.mapper.FlowMapper">
    
    <resultMap type="Flow" id="FlowResult">
        <result property="transactionId"    column="transaction_id"    />
        <result property="account1Id"    column="account1_id"    />
        <result property="transactionType"    column="transaction_type"    />
        <result property="amount"    column="amount"    />
        <result property="transactionDate"    column="transaction_date"    />
        <result property="description"    column="description"    />
    </resultMap>

    <sql id="selectFlowVo">
        select transaction_id, account1_id, transaction_type, amount, transaction_date, description from flow
    </sql>

    <select id="selectFlowList" parameterType="Flow" resultMap="FlowResult">
        <include refid="selectFlowVo"/>
        <where>  
            <if test="transactionId != null  and transactionId != ''"> and transaction_id = #{transactionId}</if>
            <if test="account1Id != null  and account1Id != ''"> and account1_id = #{account1Id}</if>
            <if test="transactionType != null  and transactionType != ''"> and transaction_type = #{transactionType}</if>
            <if test="amount != null  and amount != ''"> and amount = #{amount}</if>
            <if test="transactionDate != null  and transactionDate != ''"> and transaction_date = #{transactionDate}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
        </where>
    </select>
    
    <select id="selectFlowByTransactionId" parameterType="String" resultMap="FlowResult">
        <include refid="selectFlowVo"/>
        where transaction_id = #{transactionId}
    </select>
        
    <insert id="insertFlow" parameterType="Flow">
        insert into flow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="transactionId != null">transaction_id,</if>
            <if test="account1Id != null">account1_id,</if>
            <if test="transactionType != null">transaction_type,</if>
            <if test="amount != null">amount,</if>
            <if test="transactionDate != null">transaction_date,</if>
            <if test="description != null">description,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="transactionId != null">#{transactionId},</if>
            <if test="account1Id != null">#{account1Id},</if>
            <if test="transactionType != null">#{transactionType},</if>
            <if test="amount != null">#{amount},</if>
            <if test="transactionDate != null">#{transactionDate},</if>
            <if test="description != null">#{description},</if>
         </trim>
    </insert>

    <update id="updateFlow" parameterType="Flow">
        update flow
        <trim prefix="SET" suffixOverrides=",">
            <if test="account1Id != null">account1_id = #{account1Id},</if>
            <if test="transactionType != null">transaction_type = #{transactionType},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="transactionDate != null">transaction_date = #{transactionDate},</if>
            <if test="description != null">description = #{description},</if>
        </trim>
        where transaction_id = #{transactionId}
    </update>

    <delete id="deleteFlowByTransactionId" parameterType="String">
        delete from flow where transaction_id = #{transactionId}
    </delete>

    <delete id="deleteFlowByTransactionIds" parameterType="String">
        delete from flow where transaction_id in 
        <foreach item="transactionId" collection="array" open="(" separator="," close=")">
            #{transactionId}
        </foreach>
    </delete>
</mapper>