<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.bank.mapper.FundMapper">
    
    <resultMap type="Fund" id="FundResult">
        <result property="dayIncomeRatio"    column="dayIncomeRatio"    />
        <result property="productName"    column="product_name"    />
        <result property="fundTypeName"    column="fundTypeName"    />
        <result property="productRiskLevel"    column="productRiskLevel"    />
        <result property="accumulativeNav"    column="accumulativeNav"    />
        <result property="productId"    column="productId"    />
    </resultMap>

    <sql id="selectFundVo">
        select dayIncomeRatio, product_name, fundTypeName, productRiskLevel, accumulativeNav, productId from fund
    </sql>

    <select id="selectFundList" parameterType="Fund" resultMap="FundResult">
        <include refid="selectFundVo"/>
        <where>  
            <if test="dayIncomeRatio != null  and dayIncomeRatio != ''"> and dayIncomeRatio = #{dayIncomeRatio}</if>
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="fundTypeName != null  and fundTypeName != ''"> and fundTypeName like concat('%', #{fundTypeName}, '%')</if>
            <if test="productRiskLevel != null  and productRiskLevel != ''"> and productRiskLevel = #{productRiskLevel}</if>
            <if test="accumulativeNav != null  and accumulativeNav != ''"> and accumulativeNav = #{accumulativeNav}</if>
            <if test="productId != null  and productId != ''"> and productId = #{productId}</if>
        </where>
    </select>
    
    <select id="selectFundByDayIncomeRatio" parameterType="String" resultMap="FundResult">
        <include refid="selectFundVo"/>
        where dayIncomeRatio = #{dayIncomeRatio}
    </select>
        
    <insert id="insertFund" parameterType="Fund">
        insert into fund
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dayIncomeRatio != null">dayIncomeRatio,</if>
            <if test="productName != null">product_name,</if>
            <if test="fundTypeName != null">fundTypeName,</if>
            <if test="productRiskLevel != null">productRiskLevel,</if>
            <if test="accumulativeNav != null">accumulativeNav,</if>
            <if test="productId != null">productId,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dayIncomeRatio != null">#{dayIncomeRatio},</if>
            <if test="productName != null">#{productName},</if>
            <if test="fundTypeName != null">#{fundTypeName},</if>
            <if test="productRiskLevel != null">#{productRiskLevel},</if>
            <if test="accumulativeNav != null">#{accumulativeNav},</if>
            <if test="productId != null">#{productId},</if>
         </trim>
    </insert>

    <update id="updateFund" parameterType="Fund">
        update fund
        <trim prefix="SET" suffixOverrides=",">
            <if test="productName != null">product_name = #{productName},</if>
            <if test="fundTypeName != null">fundTypeName = #{fundTypeName},</if>
            <if test="productRiskLevel != null">productRiskLevel = #{productRiskLevel},</if>
            <if test="accumulativeNav != null">accumulativeNav = #{accumulativeNav},</if>
            <if test="productId != null">productId = #{productId},</if>
        </trim>
        where dayIncomeRatio = #{dayIncomeRatio}
    </update>

    <delete id="deleteFundByDayIncomeRatio" parameterType="String">
        delete from fund where dayIncomeRatio = #{dayIncomeRatio}
    </delete>

    <delete id="deleteFundByDayIncomeRatios" parameterType="String">
        delete from fund where dayIncomeRatio in 
        <foreach item="dayIncomeRatio" collection="array" open="(" separator="," close=")">
            #{dayIncomeRatio}
        </foreach>
    </delete>
</mapper>